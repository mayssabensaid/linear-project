ALGORITHM fulfills
VAR
    tab1 : ARRAY_OF INTEGER[n];
    tab2 : ARRAY_OF INTEGER[n];
    i,sum,count : INTEGER ;
BEGIN

    tab1 := {1,2,3,5,7,8};
    tab2 := {9,2,6,4,5} ;
    sum := 0 ;
    i:= 0;
    count:=0;
    read(n)
    FOR i FROM 0 TO n STEP step 1  DO
        read tab1[i]
    END_FOR
    FOR i FROM 0 TO n STEP step 1  DO
        read tab2[i]
    END_FOR
    FOR i FROM 0 TO tab1.length-1 STEP step 1 DO

        WHILE (tab1[i]<>tab2[count] and count <= set2.length-1) DO
            count+=1
        END_WHILE
        IF (count=tab2.length-1) THEN
            sum := sum+tab1[i]
            ELSE
                FOR i FROM 0 TO tab2.length-1 STEP step 1 DO
                WHILE (tab2[count]<>tab1[i] and count <= set1.length-1) DO
                count+=1
                END_WHILE
                IF (count=tab1.length-1) THEN
                sum := sum+tab2[count]
                END_IF
                END_FOR

        END_IF
        
    END_FOR
     
END
ALGORITHM tab2
VAR
    tab1 : ARRAY_OF INTEGER[a];
    tab2 : ARRAY_OF INTEGER[b];
    
    htab : HASH_TABLE<INTEGER,INTEGER>;
    i,j,a,b,el : INTEGER ;
    sum:INTEGER :=0;
    arr : ARRAY_OF INTEGER ;
    count : INTEGER :=1 ;
BEGIN
    FOR i FROM 0 TO tab1.length -1 STEP step 1 DO
        Read(tab1[i])
    END_FOR
    FOR j FROM 0 TO tab2.length-1 STEP step 1 DO
        Read(tab2[j])
    END_FOR
    FOR i FROM 0 TO tab1.length-1 STEP step 1 DO
        htab.insert( tab1[i],1);
        FOR j FROM 0 TO tab2.length-1 STEP step 1 DO
            IF (tab1[i] lookup tab2[j] =true) THEN
            htab.get(tab1[i],2) 
            END_IF
        END_FOR
    END_FOR
    FOR j FROM 0 TO tab2.length-1 STEP step 1 DO
        htab.insert( tab1[j],1);
        FOR i FROM 0 TO tab1.length-1 STEP step 1 DO
            IF (tab1[j] lookup tab2[i] =true) THEN
            htab.get(tab1[j],2) 
            END_IF
        END_FOR
    END_FOR
    



END